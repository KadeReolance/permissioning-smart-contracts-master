{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\Desktop\\\\permissioning-smart-contracts-master\\\\permissioning-smart-contracts-master\\\\src\\\\components\\\\Dashboard\\\\Dashboard.tsx\";\n// Libs\nimport React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { AccountDataProvider } from '../../context/accountData';\nimport { AdminDataProvider } from '../../context/adminData';\nimport { NodeDataProvider } from '../../context/nodeData'; // Components\n\nimport TabSelector from './TabSelector';\nimport Toasts from '../../containers/Toasts/Toasts';\nimport AccountTab from '../../containers/Tabs/Account';\nimport AdminTab from '../../containers/Tabs/Admin';\nimport EnodeTab from '../../containers/Tabs/Enode'; // Context\n\nimport { ToastProvider } from '../../context/toasts'; // Constants\n\nimport { ACCOUNT_TAB, ADMIN_TAB, ENODE_TAB } from '../../constants/tabs';\n\nconst Dashboard = ({\n  tab,\n  setTab\n}) => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(TabSelector, {\n  setTab: setTab,\n  tab: tab,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(ToastProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Toasts, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(AdminDataProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(AccountDataProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(AccountTab, {\n  isOpen: tab === ACCOUNT_TAB,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(AdminTab, {\n  isOpen: tab === ADMIN_TAB,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(NodeDataProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(EnodeTab, {\n  isOpen: tab === ENODE_TAB,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }\n})))));\n\nDashboard.propTypes = {\n  setTab: PropTypes.func.isRequired,\n  tab: PropTypes.string.isRequired\n};\nexport default memo(Dashboard);","map":{"version":3,"sources":["C:/Users/Julia/Desktop/permissioning-smart-contracts-master/permissioning-smart-contracts-master/src/components/Dashboard/Dashboard.tsx"],"names":["React","Fragment","memo","PropTypes","AccountDataProvider","AdminDataProvider","NodeDataProvider","TabSelector","Toasts","AccountTab","AdminTab","EnodeTab","ToastProvider","ACCOUNT_TAB","ADMIN_TAB","ENODE_TAB","Dashboard","tab","setTab","propTypes","func","isRequired","string"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,gBAAT,QAAiC,wBAAjC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB,C,CACA;;AACA,SAASC,aAAT,QAA8B,sBAA9B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,SAAjC,QAAkD,sBAAlD;;AAOA,MAAMC,SAA8B,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,kBACrC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AAAa,EAAA,MAAM,EAAEA,MAArB;AAA6B,EAAA,GAAG,EAAED,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAGI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AAAY,EAAA,MAAM,EAAEA,GAAG,KAAKJ,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,eAIE,oBAAC,QAAD;AAAU,EAAA,MAAM,EAAEI,GAAG,KAAKH,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,eAKE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,MAAM,EAAEG,GAAG,KAAKF,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CALF,CAFF,CAHJ,CADF;;AAoBAC,SAAS,CAACG,SAAV,GAAsB;AACpBD,EAAAA,MAAM,EAAEf,SAAS,CAACiB,IAAV,CAAeC,UADH;AAEpBJ,EAAAA,GAAG,EAAEd,SAAS,CAACmB,MAAV,CAAiBD;AAFF,CAAtB;AAKA,eAAenB,IAAI,CAACc,SAAD,CAAnB","sourcesContent":["// Libs\nimport React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { AccountDataProvider } from '../../context/accountData';\nimport { AdminDataProvider } from '../../context/adminData';\nimport { NodeDataProvider } from '../../context/nodeData';\n// Components\nimport TabSelector from './TabSelector';\nimport Toasts from '../../containers/Toasts/Toasts';\nimport AccountTab from '../../containers/Tabs/Account';\nimport AdminTab from '../../containers/Tabs/Admin';\nimport EnodeTab from '../../containers/Tabs/Enode';\n// Context\nimport { ToastProvider } from '../../context/toasts';\n// Constants\nimport { ACCOUNT_TAB, ADMIN_TAB, ENODE_TAB } from '../../constants/tabs';\n\ntype Dashboard = {\n  tab: string;\n  setTab: (tab: string) => void;\n};\n\nconst Dashboard: React.FC<Dashboard> = ({ tab, setTab }) => (\n  <Fragment>\n    <TabSelector setTab={setTab} tab={tab} />\n    {\n      <ToastProvider>\n        <Toasts />\n        <AdminDataProvider>\n          <AccountDataProvider>\n            <AccountTab isOpen={tab === ACCOUNT_TAB} />\n          </AccountDataProvider>\n          <AdminTab isOpen={tab === ADMIN_TAB} />\n          <NodeDataProvider>\n            <EnodeTab isOpen={tab === ENODE_TAB} />\n          </NodeDataProvider>\n        </AdminDataProvider>\n      </ToastProvider>\n    }\n  </Fragment>\n);\n\nDashboard.propTypes = {\n  setTab: PropTypes.func.isRequired,\n  tab: PropTypes.string.isRequired\n};\n\nexport default memo(Dashboard);\n"]},"metadata":{},"sourceType":"module"}