{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\Desktop\\\\permissioning-smart-contracts-master\\\\permissioning-smart-contracts-master\\\\src\\\\containers\\\\Tabs\\\\Admin.tsx\";\n// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isAddress } from 'web3-utils';\nimport idx from 'idx'; // Context\n\nimport { useAdminData } from '../../context/adminData'; // Utils\n\nimport useTab from './useTab';\nimport { errorToast } from '../../util/tabTools'; // Components\n\nimport AdminTab from '../../components/AdminTab/AdminTab';\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\nimport NoContract from '../../components/Flashes/NoContract'; // Constants\n\nimport { PENDING_ADDITION, FAIL_ADDITION, PENDING_REMOVAL, FAIL_REMOVAL, SUCCESS, FAIL } from '../../constants/transactions';\n\nconst AdminTabContainer = ({\n  isOpen\n}) => {\n  const {\n    admins,\n    isAdmin,\n    userAddress,\n    dataReady,\n    adminContract\n  } = useAdminData();\n  const {\n    list,\n    modals,\n    toggleModal,\n    addTransaction,\n    updateTransaction,\n    deleteTransaction,\n    openToast\n  } = useTab(admins || [], identifier => ({\n    address: identifier\n  }));\n\n  if (!!adminContract) {\n    const handleAdd = async value => {\n      try {\n        const tx = await adminContract.functions.addAdmin(value);\n        toggleModal('add')(false);\n        addTransaction(value, PENDING_ADDITION);\n        const receipt = await tx.wait(1); // wait on receipt confirmations\n\n        const addEvent = receipt.events.filter(e => e.event && e.event === 'AdminAdded').pop();\n\n        if (!addEvent) {\n          openToast(value, FAIL, `Error while processing Admin account: ${value}`);\n        } else {\n          const addSuccessResult = idx(addEvent, _ => _.args[0]);\n\n          if (addSuccessResult === undefined) {\n            openToast(value, FAIL, `Error while processing Admin account: ${value}`);\n          } else if (Boolean(addSuccessResult)) {\n            openToast(value, SUCCESS, `New Admin account processed: ${value}`);\n          } else {\n            const message = idx(addEvent, _ => _.args[2]);\n            openToast(value, FAIL, message);\n          }\n        }\n\n        deleteTransaction(value);\n      } catch (e) {\n        toggleModal('add')(false);\n        updateTransaction(value, FAIL_ADDITION);\n        errorToast(e, value, openToast, () => openToast(value, FAIL, 'Could not add account as admin', `${value} was unable to be added. Please try again.`));\n      }\n    };\n\n    const handleRemove = async value => {\n      try {\n        const est = await adminContract.estimate.removeAdmin(value);\n        const tx = await adminContract.functions.removeAdmin(value, {\n          gasLimit: est.toNumber() * 2\n        });\n        toggleModal('remove')(false);\n        addTransaction(value, PENDING_REMOVAL);\n        await tx.wait(1); // wait on receipt confirmations\n\n        openToast(value, SUCCESS, `Removal of admin account processed: ${value}`);\n        deleteTransaction(value);\n      } catch (e) {\n        toggleModal('remove')(false);\n        updateTransaction(value, FAIL_REMOVAL);\n        errorToast(e, value, openToast, () => openToast(value, FAIL, 'Could not remove admin account', `${value} was unable to be removed. Please try again.`));\n      }\n    };\n\n    const isValidAdmin = address => {\n      let isValidAddress = isAddress(address);\n\n      if (!isValidAddress) {\n        return {\n          valid: false\n        };\n      }\n\n      let isAdmin = list.filter(item => item.address.toLowerCase() === address.toLowerCase()).length > 0;\n\n      if (isAdmin) {\n        return {\n          valid: false,\n          msg: 'Account address is already an admin.'\n        };\n      }\n\n      return {\n        valid: true\n      };\n    };\n\n    if (isOpen && dataReady) {\n      return /*#__PURE__*/React.createElement(AdminTab, {\n        list: list,\n        userAddress: userAddress,\n        modals: modals,\n        toggleModal: toggleModal,\n        handleAdd: handleAdd,\n        handleRemove: handleRemove,\n        isAdmin: isAdmin,\n        deleteTransaction: deleteTransaction,\n        isValid: isValidAdmin,\n        isOpen: isOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      });\n    } else if (isOpen && !dataReady) {\n      return /*#__PURE__*/React.createElement(LoadingPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 14\n        }\n      });\n    }\n  } else if (isOpen && !adminContract) {\n    return /*#__PURE__*/React.createElement(NoContract, {\n      tabName: \"Admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nAdminTabContainer.propTypes = {\n  isOpen: PropTypes.bool.isRequired\n};\nexport default AdminTabContainer;","map":{"version":3,"sources":["C:/Users/Julia/Desktop/permissioning-smart-contracts-master/permissioning-smart-contracts-master/src/containers/Tabs/Admin.tsx"],"names":["React","PropTypes","isAddress","idx","useAdminData","useTab","errorToast","AdminTab","LoadingPage","NoContract","PENDING_ADDITION","FAIL_ADDITION","PENDING_REMOVAL","FAIL_REMOVAL","SUCCESS","FAIL","AdminTabContainer","isOpen","admins","isAdmin","userAddress","dataReady","adminContract","list","modals","toggleModal","addTransaction","updateTransaction","deleteTransaction","openToast","identifier","address","handleAdd","value","tx","functions","addAdmin","receipt","wait","addEvent","events","filter","e","event","pop","addSuccessResult","_","args","undefined","Boolean","message","handleRemove","est","estimate","removeAdmin","gasLimit","toNumber","isValidAdmin","isValidAddress","valid","item","toLowerCase","length","msg","propTypes","bool","isRequired"],"mappings":"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","sourcesContent":["// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isAddress } from 'web3-utils';\nimport idx from 'idx';\n// Context\nimport { useAdminData } from '../../context/adminData';\n// Utils\nimport useTab from './useTab';\nimport { errorToast } from '../../util/tabTools';\n// Components\nimport AdminTab from '../../components/AdminTab/AdminTab';\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\nimport NoContract from '../../components/Flashes/NoContract';\n// Constants\nimport {\n  PENDING_ADDITION,\n  FAIL_ADDITION,\n  PENDING_REMOVAL,\n  FAIL_REMOVAL,\n  SUCCESS,\n  FAIL\n} from '../../constants/transactions';\n\ntype AdminTabContainerProps = {\n  isOpen: boolean;\n};\n\ntype Admin = {\n  address: string;\n  identifier: string;\n  status: string;\n};\n\nconst AdminTabContainer: React.FC<AdminTabContainerProps> = ({ isOpen }) => {\n  const { admins, isAdmin, userAddress, dataReady, adminContract } = useAdminData();\n  const { list, modals, toggleModal, addTransaction, updateTransaction, deleteTransaction, openToast } = useTab(\n    admins || [],\n    (identifier: string) => ({ address: identifier })\n  );\n\n  if (!!adminContract) {\n    const handleAdd = async (value: string) => {\n      try {\n        const tx = await adminContract!.functions.addAdmin(value);\n        toggleModal('add')(false);\n        addTransaction(value, PENDING_ADDITION);\n        const receipt = await tx.wait(1); // wait on receipt confirmations\n        const addEvent = receipt.events!.filter(e => e.event && e.event === 'AdminAdded').pop();\n        if (!addEvent) {\n          openToast(value, FAIL, `Error while processing Admin account: ${value}`);\n        } else {\n          const addSuccessResult = idx(addEvent, _ => _.args[0]);\n          if (addSuccessResult === undefined) {\n            openToast(value, FAIL, `Error while processing Admin account: ${value}`);\n          } else if (Boolean(addSuccessResult)) {\n            openToast(value, SUCCESS, `New Admin account processed: ${value}`);\n          } else {\n            const message = idx(addEvent, _ => _.args[2]);\n            openToast(value, FAIL, message);\n          }\n        }\n        deleteTransaction(value);\n      } catch (e) {\n        toggleModal('add')(false);\n        updateTransaction(value, FAIL_ADDITION);\n        errorToast(e, value, openToast, () =>\n          openToast(value, FAIL, 'Could not add account as admin', `${value} was unable to be added. Please try again.`)\n        );\n      }\n    };\n\n    const handleRemove = async (value: string) => {\n      try {\n        const est = await adminContract!.estimate.removeAdmin(value);\n        const tx = await adminContract!.functions.removeAdmin(value, { gasLimit: est.toNumber() * 2 });\n        toggleModal('remove')(false);\n        addTransaction(value, PENDING_REMOVAL);\n        await tx.wait(1); // wait on receipt confirmations\n        openToast(value, SUCCESS, `Removal of admin account processed: ${value}`);\n        deleteTransaction(value);\n      } catch (e) {\n        toggleModal('remove')(false);\n        updateTransaction(value, FAIL_REMOVAL);\n        errorToast(e, value, openToast, () =>\n          openToast(\n            value,\n            FAIL,\n            'Could not remove admin account',\n            `${value} was unable to be removed. Please try again.`\n          )\n        );\n      }\n    };\n\n    const isValidAdmin = (address: string) => {\n      let isValidAddress = isAddress(address);\n      if (!isValidAddress) {\n        return {\n          valid: false\n        };\n      }\n\n      let isAdmin = list.filter((item: Admin) => item.address.toLowerCase() === address.toLowerCase()).length > 0;\n      if (isAdmin) {\n        return {\n          valid: false,\n          msg: 'Account address is already an admin.'\n        };\n      }\n\n      return {\n        valid: true\n      };\n    };\n\n    if (isOpen && dataReady) {\n      return (\n        <AdminTab\n          list={list}\n          userAddress={userAddress}\n          modals={modals}\n          toggleModal={toggleModal}\n          handleAdd={handleAdd}\n          handleRemove={handleRemove}\n          isAdmin={isAdmin}\n          deleteTransaction={deleteTransaction}\n          isValid={isValidAdmin}\n          isOpen={isOpen}\n        />\n      );\n    } else if (isOpen && !dataReady) {\n      return <LoadingPage />;\n    } else {\n      return <div />;\n    }\n  } else if (isOpen && !adminContract) {\n    return <NoContract tabName=\"Admin\" />;\n  } else {\n    return <div />;\n  }\n};\n\nAdminTabContainer.propTypes = {\n  isOpen: PropTypes.bool.isRequired\n};\n\nexport default AdminTabContainer;\n"]},"metadata":{},"sourceType":"module"}