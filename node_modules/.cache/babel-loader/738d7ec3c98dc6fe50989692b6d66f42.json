{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\Desktop\\\\permissioning-smart-contracts-master\\\\permissioning-smart-contracts-master\\\\src\\\\components\\\\AccountTab\\\\AccountTab.tsx\";\n// Libs\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types'; // Components\n\nimport AccountTable from './Table';\nimport AddModal from '../../containers/Modals/Add';\nimport RemoveModal from '../../containers/Modals/Remove'; // Constants\n\nimport { addAccountDisplay, removeAccountDisplay } from '../../constants/modals';\n\nconst AccountTab = ({\n  list,\n  modals,\n  toggleModal,\n  handleAdd,\n  handleRemove,\n  isAdmin,\n  deleteTransaction,\n  isValid,\n  isOpen,\n  isReadOnly\n}) => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}, isOpen && /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(AccountTable, {\n  list: list,\n  toggleModal: toggleModal,\n  isAdmin: isAdmin,\n  deleteTransaction: deleteTransaction,\n  isReadOnly: isReadOnly,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(AddModal, {\n  isOpen: Boolean(modals.add) && isAdmin,\n  closeModal: () => toggleModal('add')(false),\n  handleAdd: handleAdd,\n  display: addAccountDisplay,\n  isValid: isValid,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(RemoveModal, {\n  isOpen: Boolean(modals.remove) && isAdmin,\n  value: modals.remove,\n  closeModal: () => toggleModal('remove')(false),\n  handleRemove: handleRemove,\n  display: removeAccountDisplay(modals.remove),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }\n})));\n\nAccountTab.propTypes = {\n  list: PropTypes.array.isRequired,\n  modals: PropTypes.shape({\n    add: PropTypes.bool.isRequired,\n    remove: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n    lock: PropTypes.bool.isRequired\n  }).isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired,\n  isReadOnly: PropTypes.bool.isRequired\n};\nexport default AccountTab;","map":{"version":3,"sources":["C:/Users/Julia/Desktop/permissioning-smart-contracts-master/permissioning-smart-contracts-master/src/components/AccountTab/AccountTab.tsx"],"names":["React","Fragment","PropTypes","AccountTable","AddModal","RemoveModal","addAccountDisplay","removeAccountDisplay","AccountTab","list","modals","toggleModal","handleAdd","handleRemove","isAdmin","deleteTransaction","isValid","isOpen","isReadOnly","Boolean","add","remove","propTypes","array","isRequired","shape","bool","oneOfType","string","lock","func"],"mappings":"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","sourcesContent":["// Libs\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport AccountTable from './Table';\nimport AddModal from '../../containers/Modals/Add';\nimport RemoveModal from '../../containers/Modals/Remove';\n// Constants\nimport { addAccountDisplay, removeAccountDisplay } from '../../constants/modals';\n\ntype AccountTab = {\n  list: any[];\n  modals: {\n    add: boolean;\n    remove: boolean | string;\n    lock: boolean;\n  };\n  toggleModal: (name: 'add' | 'remove' | 'lock') => (value?: boolean | string) => void;\n  handleAdd: (value: any) => Promise<void>;\n  handleRemove: (value: any) => Promise<void>;\n  isAdmin: boolean;\n  deleteTransaction: (identifier: string) => void;\n  isValid: (address: string) => { valid: boolean };\n  isOpen: boolean;\n  isReadOnly: boolean;\n};\n\nconst AccountTab: React.FC<AccountTab> = ({\n  list,\n  modals,\n  toggleModal,\n  handleAdd,\n  handleRemove,\n  isAdmin,\n  deleteTransaction,\n  isValid,\n  isOpen,\n  isReadOnly\n}) => (\n  <Fragment>\n    {isOpen && (\n      <Fragment>\n        <AccountTable\n          list={list}\n          toggleModal={toggleModal}\n          isAdmin={isAdmin}\n          deleteTransaction={deleteTransaction}\n          isReadOnly={isReadOnly}\n        />\n        <AddModal\n          isOpen={Boolean(modals.add) && isAdmin}\n          closeModal={() => toggleModal('add')(false)}\n          handleAdd={handleAdd}\n          display={addAccountDisplay}\n          isValid={isValid}\n        />\n        <RemoveModal\n          isOpen={Boolean(modals.remove) && isAdmin}\n          value={modals.remove}\n          closeModal={() => toggleModal('remove')(false)}\n          handleRemove={handleRemove}\n          display={removeAccountDisplay(modals.remove)}\n        />\n      </Fragment>\n    )}\n  </Fragment>\n);\n\nAccountTab.propTypes = {\n  list: PropTypes.array.isRequired,\n  modals: PropTypes.shape({\n    add: PropTypes.bool.isRequired,\n    remove: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n    lock: PropTypes.bool.isRequired\n  }).isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired,\n  isReadOnly: PropTypes.bool.isRequired\n};\n\nexport default AccountTab;\n"]},"metadata":{},"sourceType":"module"}