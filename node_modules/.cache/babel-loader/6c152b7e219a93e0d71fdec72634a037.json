{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\Desktop\\\\permissioning-smart-contracts-master\\\\permissioning-smart-contracts-master\\\\src\\\\components\\\\AdminTab\\\\AdminTab.tsx\";\n// Libs\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types'; // Components\n\nimport AdminTable from './Table';\nimport AddModal from '../../containers/Modals/Add';\nimport RemoveModal from '../../containers/Modals/Remove'; // Constants\n\nimport { addAdminDisplay, removeAdminDisplay } from '../../constants/modals';\n\nconst AdminTab = ({\n  list,\n  userAddress,\n  modals,\n  toggleModal,\n  handleAdd,\n  handleRemove,\n  isAdmin,\n  deleteTransaction,\n  isValid,\n  isOpen\n}) => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}, isOpen && /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(AdminTable, {\n  list: list,\n  userAddress: userAddress,\n  toggleModal: toggleModal,\n  isAdmin: isAdmin,\n  deleteTransaction: deleteTransaction,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(AddModal, {\n  isOpen: modals.add && isAdmin,\n  closeModal: () => toggleModal('add')(false),\n  handleAdd: handleAdd,\n  display: addAdminDisplay,\n  isValid: isValid,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(RemoveModal, {\n  isOpen: Boolean(modals.remove) && isAdmin,\n  value: modals.remove,\n  closeModal: () => toggleModal('remove')(false),\n  handleRemove: handleRemove,\n  display: removeAdminDisplay(modals.remove),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }\n})));\n\nAdminTab.propTypes = {\n  list: PropTypes.array.isRequired,\n  userAddress: PropTypes.string,\n  modals: PropTypes.shape({\n    add: PropTypes.bool.isRequired,\n    remove: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n    lock: PropTypes.bool.isRequired\n  }).isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired\n};\nexport default AdminTab;","map":{"version":3,"sources":["C:/Users/Julia/Desktop/permissioning-smart-contracts-master/permissioning-smart-contracts-master/src/components/AdminTab/AdminTab.tsx"],"names":["React","Fragment","PropTypes","AdminTable","AddModal","RemoveModal","addAdminDisplay","removeAdminDisplay","AdminTab","list","userAddress","modals","toggleModal","handleAdd","handleRemove","isAdmin","deleteTransaction","isValid","isOpen","add","Boolean","remove","propTypes","array","isRequired","string","shape","bool","oneOfType","lock","func"],"mappings":"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","sourcesContent":["// Libs\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport AdminTable from './Table';\nimport AddModal from '../../containers/Modals/Add';\nimport RemoveModal from '../../containers/Modals/Remove';\n// Constants\nimport { addAdminDisplay, removeAdminDisplay } from '../../constants/modals';\n\ntype AdminTab = {\n  list: { address: string; status: string }[];\n  userAddress?: string;\n  modals: {\n    add: boolean;\n    remove: boolean | string;\n    lock: boolean;\n  };\n  toggleModal: (name: 'add' | 'remove' | 'lock') => (value?: boolean | string) => void;\n  handleAdd: (value: any) => Promise<void>;\n  handleRemove: (value: any) => Promise<void>;\n  isAdmin: boolean;\n  deleteTransaction: (identifier: string) => void;\n  isValid: (address: string) => { valid: boolean; msg?: string };\n  isOpen: boolean;\n};\n\nconst AdminTab: React.FC<AdminTab> = ({\n  list,\n  userAddress,\n  modals,\n  toggleModal,\n  handleAdd,\n  handleRemove,\n  isAdmin,\n  deleteTransaction,\n  isValid,\n  isOpen\n}) => (\n  <Fragment>\n    {isOpen && (\n      <Fragment>\n        <AdminTable\n          list={list}\n          userAddress={userAddress}\n          toggleModal={toggleModal}\n          isAdmin={isAdmin}\n          deleteTransaction={deleteTransaction}\n        />\n        <AddModal\n          isOpen={modals.add && isAdmin}\n          closeModal={() => toggleModal('add')(false)}\n          handleAdd={handleAdd}\n          display={addAdminDisplay}\n          isValid={isValid}\n        />\n        <RemoveModal\n          isOpen={Boolean(modals.remove) && isAdmin}\n          value={modals.remove}\n          closeModal={() => toggleModal('remove')(false)}\n          handleRemove={handleRemove}\n          display={removeAdminDisplay(modals.remove)}\n        />\n      </Fragment>\n    )}\n  </Fragment>\n);\n\nAdminTab.propTypes = {\n  list: PropTypes.array.isRequired,\n  userAddress: PropTypes.string,\n  modals: PropTypes.shape({\n    add: PropTypes.bool.isRequired,\n    remove: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n    lock: PropTypes.bool.isRequired\n  }).isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired\n};\n\nexport default AdminTab;\n"]},"metadata":{},"sourceType":"module"}