{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\Desktop\\\\permissioning-smart-contracts-master\\\\permissioning-smart-contracts-master\\\\src\\\\containers\\\\Tabs\\\\Account.tsx\";\n// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isAddress } from 'web3-utils';\nimport idx from 'idx'; // Context\n\nimport { useAccountData } from '../../context/accountData';\nimport { useAdminData } from '../../context/adminData'; // Utils\n\nimport useTab from './useTab';\nimport { errorToast } from '../../util/tabTools'; // Components\n\nimport AccountTab from '../../components/AccountTab/AccountTab';\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\nimport NoContract from '../../components/Flashes/NoContract'; // Constants\n\nimport { PENDING_ADDITION, FAIL_ADDITION, PENDING_REMOVAL, FAIL_REMOVAL, SUCCESS, FAIL } from '../../constants/transactions';\n\nconst AccountTabContainer = ({\n  isOpen\n}) => {\n  const {\n    isAdmin,\n    dataReady: adminDataReady\n  } = useAdminData();\n  const {\n    allowlist,\n    isReadOnly,\n    dataReady,\n    accountRulesContract\n  } = useAccountData();\n  const {\n    list,\n    modals,\n    toggleModal,\n    addTransaction,\n    updateTransaction,\n    deleteTransaction,\n    openToast\n  } = useTab(allowlist, identifier => ({\n    address: identifier\n  }));\n\n  if (!!accountRulesContract) {\n    const handleAdd = async value => {\n      try {\n        const tx = await accountRulesContract.functions.addAccount(value);\n        toggleModal('add')(false);\n        addTransaction(value, PENDING_ADDITION);\n        const receipt = await tx.wait(1); // wait on receipt confirmations\n\n        const addEvent = receipt.events.filter(e => e.event && e.event === 'AccountAdded').pop();\n\n        if (!addEvent) {\n          openToast(value, FAIL, `Error while processing account: ${value}`);\n        } else {\n          const addSuccessResult = idx(addEvent, _ => _.args[0]);\n\n          if (addSuccessResult === undefined) {\n            openToast(value, FAIL, `Error while adding account: ${value}`);\n          } else if (Boolean(addSuccessResult)) {\n            openToast(value, SUCCESS, `New account added: ${value}`);\n          } else {\n            openToast(value, FAIL, `Account \"${value}\" is already added`);\n          }\n        }\n\n        deleteTransaction(value);\n      } catch (e) {\n        toggleModal('add')(false);\n        updateTransaction(value, FAIL_ADDITION);\n        errorToast(e, value, openToast, () => openToast(value, FAIL, 'Could not add account', `${value} was unable to be added. Please try again.`));\n      }\n    };\n\n    const handleRemove = async value => {\n      try {\n        const est = await accountRulesContract.estimate.removeAccount(value);\n        const tx = await accountRulesContract.functions.removeAccount(value, {\n          gasLimit: est.toNumber() * 2\n        });\n        toggleModal('remove')(false);\n        addTransaction(value, PENDING_REMOVAL);\n        await tx.wait(1); // wait on receipt confirmations\n\n        openToast(value, SUCCESS, `Removal of account processed: ${value}`);\n        deleteTransaction(value);\n      } catch (e) {\n        console.log('error', e);\n        toggleModal('remove')(false);\n        updateTransaction(value, FAIL_REMOVAL);\n        errorToast(e, value, openToast, () => openToast(value, FAIL, 'Could not remove account', `${value} was unable to be removed. Please try again.`));\n      }\n    };\n\n    const isValidAccount = address => {\n      let isValidAddress = isAddress(address);\n\n      if (!isValidAddress) {\n        return {\n          valid: false\n        };\n      }\n\n      let isDuplicateAccount = list.filter(item => address.toLowerCase() === item.address.toLowerCase()).length > 0;\n\n      if (isDuplicateAccount) {\n        return {\n          valid: false,\n          msg: 'Account address is already added.'\n        };\n      }\n\n      return {\n        valid: true\n      };\n    };\n\n    const allDataReady = dataReady && adminDataReady;\n\n    if (isOpen && allDataReady) {\n      return /*#__PURE__*/React.createElement(AccountTab, {\n        list: list,\n        modals: modals,\n        toggleModal: toggleModal,\n        handleAdd: handleAdd,\n        handleRemove: handleRemove,\n        isAdmin: isAdmin,\n        deleteTransaction: deleteTransaction,\n        isValid: isValidAccount,\n        isOpen: isOpen,\n        isReadOnly: isReadOnly,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      });\n    } else if (isOpen && !allDataReady) {\n      return /*#__PURE__*/React.createElement(LoadingPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 14\n        }\n      });\n    }\n  } else if (isOpen && !accountRulesContract) {\n    return /*#__PURE__*/React.createElement(NoContract, {\n      tabName: \"Account Rules\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nAccountTabContainer.propTypes = {\n  isOpen: PropTypes.bool.isRequired\n};\nexport default AccountTabContainer;","map":{"version":3,"sources":["C:/Users/Julia/Desktop/permissioning-smart-contracts-master/permissioning-smart-contracts-master/src/containers/Tabs/Account.tsx"],"names":["React","PropTypes","isAddress","idx","useAccountData","useAdminData","useTab","errorToast","AccountTab","LoadingPage","NoContract","PENDING_ADDITION","FAIL_ADDITION","PENDING_REMOVAL","FAIL_REMOVAL","SUCCESS","FAIL","AccountTabContainer","isOpen","isAdmin","dataReady","adminDataReady","allowlist","isReadOnly","accountRulesContract","list","modals","toggleModal","addTransaction","updateTransaction","deleteTransaction","openToast","identifier","address","handleAdd","value","tx","functions","addAccount","receipt","wait","addEvent","events","filter","e","event","pop","addSuccessResult","_","args","undefined","Boolean","handleRemove","est","estimate","removeAccount","gasLimit","toNumber","console","log","isValidAccount","isValidAddress","valid","isDuplicateAccount","item","toLowerCase","length","msg","allDataReady","propTypes","bool","isRequired"],"mappings":"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","sourcesContent":["// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isAddress } from 'web3-utils';\nimport idx from 'idx';\n// Context\nimport { useAccountData } from '../../context/accountData';\nimport { useAdminData } from '../../context/adminData';\n// Utils\nimport useTab from './useTab';\nimport { errorToast } from '../../util/tabTools';\n// Components\nimport AccountTab from '../../components/AccountTab/AccountTab';\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\nimport NoContract from '../../components/Flashes/NoContract';\n// Constants\nimport {\n  PENDING_ADDITION,\n  FAIL_ADDITION,\n  PENDING_REMOVAL,\n  FAIL_REMOVAL,\n  SUCCESS,\n  FAIL\n} from '../../constants/transactions';\n\ntype AccountTabContainerProps = {\n  isOpen: boolean;\n};\n\ntype Account = {\n  address: string;\n  identifier: string;\n  status: string;\n};\n\nconst AccountTabContainer: React.FC<AccountTabContainerProps> = ({ isOpen }) => {\n  const { isAdmin, dataReady: adminDataReady } = useAdminData();\n  const { allowlist, isReadOnly, dataReady, accountRulesContract } = useAccountData();\n\n  const { list, modals, toggleModal, addTransaction, updateTransaction, deleteTransaction, openToast } = useTab(\n    allowlist,\n    (identifier: string) => ({ address: identifier })\n  );\n\n  if (!!accountRulesContract) {\n    const handleAdd = async (value: string) => {\n      try {\n        const tx = await accountRulesContract!.functions.addAccount(value);\n        toggleModal('add')(false);\n        addTransaction(value, PENDING_ADDITION);\n        const receipt = await tx.wait(1); // wait on receipt confirmations\n        const addEvent = receipt.events!.filter(e => e.event && e.event === 'AccountAdded').pop();\n        if (!addEvent) {\n          openToast(value, FAIL, `Error while processing account: ${value}`);\n        } else {\n          const addSuccessResult = idx(addEvent, _ => _.args[0]);\n          if (addSuccessResult === undefined) {\n            openToast(value, FAIL, `Error while adding account: ${value}`);\n          } else if (Boolean(addSuccessResult)) {\n            openToast(value, SUCCESS, `New account added: ${value}`);\n          } else {\n            openToast(value, FAIL, `Account \"${value}\" is already added`);\n          }\n        }\n        deleteTransaction(value);\n      } catch (e) {\n        toggleModal('add')(false);\n        updateTransaction(value, FAIL_ADDITION);\n        errorToast(e, value, openToast, () =>\n          openToast(value, FAIL, 'Could not add account', `${value} was unable to be added. Please try again.`)\n        );\n      }\n    };\n\n    const handleRemove = async (value: string) => {\n      try {\n        const est = await accountRulesContract!.estimate.removeAccount(value);\n        const tx = await accountRulesContract!.functions.removeAccount(value, { gasLimit: est.toNumber() * 2 });\n        toggleModal('remove')(false);\n        addTransaction(value, PENDING_REMOVAL);\n        await tx.wait(1); // wait on receipt confirmations\n        openToast(value, SUCCESS, `Removal of account processed: ${value}`);\n        deleteTransaction(value);\n      } catch (e) {\n        console.log('error', e);\n        toggleModal('remove')(false);\n        updateTransaction(value, FAIL_REMOVAL);\n        errorToast(e, value, openToast, () =>\n          openToast(value, FAIL, 'Could not remove account', `${value} was unable to be removed. Please try again.`)\n        );\n      }\n    };\n\n    const isValidAccount = (address: string) => {\n      let isValidAddress = isAddress(address);\n      if (!isValidAddress) {\n        return {\n          valid: false\n        };\n      }\n\n      let isDuplicateAccount =\n        list.filter((item: Account) => address.toLowerCase() === item.address.toLowerCase()).length > 0;\n      if (isDuplicateAccount) {\n        return {\n          valid: false,\n          msg: 'Account address is already added.'\n        };\n      }\n\n      return {\n        valid: true\n      };\n    };\n\n    const allDataReady: boolean = dataReady && adminDataReady;\n    if (isOpen && allDataReady) {\n      return (\n        <AccountTab\n          list={list}\n          modals={modals}\n          toggleModal={toggleModal}\n          handleAdd={handleAdd}\n          handleRemove={handleRemove}\n          isAdmin={isAdmin}\n          deleteTransaction={deleteTransaction}\n          isValid={isValidAccount}\n          isOpen={isOpen}\n          isReadOnly={isReadOnly!}\n        />\n      );\n    } else if (isOpen && !allDataReady) {\n      return <LoadingPage />;\n    } else {\n      return <div />;\n    }\n  } else if (isOpen && !accountRulesContract) {\n    return <NoContract tabName=\"Account Rules\" />;\n  } else {\n    return <div />;\n  }\n};\n\nAccountTabContainer.propTypes = {\n  isOpen: PropTypes.bool.isRequired\n};\n\nexport default AccountTabContainer;\n"]},"metadata":{},"sourceType":"module"}