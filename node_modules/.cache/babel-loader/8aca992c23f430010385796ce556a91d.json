{"ast":null,"code":"export const areArrayEqual = (arr1, arr2, searchingKeys) => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  let index = 0;\n  let isSimilar = true;\n\n  while (isSimilar && index < arr1.length) {\n    if (searchingKeys) {\n      isSimilar = searchingKeys.reduce((acc, key) => acc && arr1[index][key] === arr2[index][key], // eslint-disable-line\n      true);\n    } else {\n      isSimilar = arr1[index] === arr2[index];\n    }\n\n    index++;\n  }\n\n  return isSimilar;\n};\nexport const arrayInclude = (arr, searchingObject) => arr.some(element => {\n  return Object.entries(searchingObject).reduce((acc, [key, value]) => acc && element[key] === value, true);\n});\nexport const areMapEqual = (map1, map2) => {\n  if (map1.size !== map2.size) {\n    return false;\n  }\n\n  let isSimilar = true;\n  map1.forEach((value, key) => {\n    isSimilar = map2.has(key) && map2.get(key) === value;\n  });\n  return isSimilar;\n};","map":{"version":3,"sources":["C:/Users/Julia/Desktop/permissioning-smart-contracts-master/permissioning-smart-contracts-master/src/util/array.ts"],"names":["areArrayEqual","arr1","arr2","searchingKeys","length","index","isSimilar","reduce","acc","key","arrayInclude","arr","searchingObject","some","element","Object","entries","value","areMapEqual","map1","map2","size","forEach","has","get"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,IAAD,EAAmBC,IAAnB,EAAqCC,aAArC,KAAsE;AACjG,MAAIF,IAAI,CAACG,MAAL,KAAgBF,IAAI,CAACE,MAAzB,EAAiC;AAC/B,WAAO,KAAP;AACD;;AAED,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,SAAS,GAAG,IAAhB;;AACA,SAAOA,SAAS,IAAID,KAAK,GAAGJ,IAAI,CAACG,MAAjC,EAAyC;AACvC,QAAID,aAAJ,EAAmB;AACjBG,MAAAA,SAAS,GAAGH,aAAa,CAACI,MAAd,CACV,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,IAAIP,IAAI,CAACI,KAAD,CAAJ,CAAYI,GAAZ,MAAqBP,IAAI,CAACG,KAAD,CAAJ,CAAYI,GAAZ,CADhC,EACkD;AAC5D,UAFU,CAAZ;AAID,KALD,MAKO;AACLH,MAAAA,SAAS,GAAGL,IAAI,CAACI,KAAD,CAAJ,KAAgBH,IAAI,CAACG,KAAD,CAAhC;AACD;;AACDA,IAAAA,KAAK;AACN;;AACD,SAAOC,SAAP;AACD,CAnBM;AAqBP,OAAO,MAAMI,YAAY,GAAG,CAACC,GAAD,EAAkBC,eAAlB,KAC1BD,GAAG,CAACE,IAAJ,CAASC,OAAO,IAAI;AAClB,SAAOC,MAAM,CAACC,OAAP,CAAeJ,eAAf,EAAgCL,MAAhC,CAAgD,CAACC,GAAD,EAAM,CAACC,GAAD,EAAMQ,KAAN,CAAN,KAAuBT,GAAG,IAAIM,OAAO,CAACL,GAAD,CAAP,KAAiBQ,KAA/F,EAAsG,IAAtG,CAAP;AACD,CAFD,CADK;AAKP,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAsBC,IAAtB,KAA8C;AACvE,MAAID,IAAI,CAACE,IAAL,KAAcD,IAAI,CAACC,IAAvB,EAA6B;AAC3B,WAAO,KAAP;AACD;;AACD,MAAIf,SAAS,GAAG,IAAhB;AACAa,EAAAA,IAAI,CAACG,OAAL,CAAa,CAACL,KAAD,EAAQR,GAAR,KAAgB;AAC3BH,IAAAA,SAAS,GAAGc,IAAI,CAACG,GAAL,CAASd,GAAT,KAAiBW,IAAI,CAACI,GAAL,CAASf,GAAT,MAAkBQ,KAA/C;AACD,GAFD;AAGA,SAAOX,SAAP;AACD,CATM","sourcesContent":["export const areArrayEqual = (arr1: Array<any>, arr2: Array<any>, searchingKeys: Array<string>) => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  let index = 0;\n  let isSimilar = true;\n  while (isSimilar && index < arr1.length) {\n    if (searchingKeys) {\n      isSimilar = searchingKeys.reduce<boolean>(\n        (acc, key) => acc && arr1[index][key] === arr2[index][key], // eslint-disable-line\n        true\n      );\n    } else {\n      isSimilar = arr1[index] === arr2[index];\n    }\n    index++;\n  }\n  return isSimilar;\n};\n\nexport const arrayInclude = (arr: Array<any>, searchingObject: Object) =>\n  arr.some(element => {\n    return Object.entries(searchingObject).reduce<boolean>((acc, [key, value]) => acc && element[key] === value, true);\n  });\n\nexport const areMapEqual = (map1: Map<any, any>, map2: Map<any, any>) => {\n  if (map1.size !== map2.size) {\n    return false;\n  }\n  let isSimilar = true;\n  map1.forEach((value, key) => {\n    isSimilar = map2.has(key) && map2.get(key) === value;\n  });\n  return isSimilar;\n};\n"]},"metadata":{},"sourceType":"module"}