{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\Desktop\\\\permissioning-smart-contracts-master\\\\permissioning-smart-contracts-master\\\\src\\\\context\\\\configData.tsx\";\nimport React, { createContext, useContext } from 'react';\nconst ConfigDataContext = createContext(undefined);\nexport const ConfigDataProvider = props => {\n  return /*#__PURE__*/React.createElement(ConfigDataContext.Provider, Object.assign({\n    value: {\n      config: props.config\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  }));\n};\nexport const useConfig = () => {\n  const context = useContext(ConfigDataContext);\n\n  if (!context) {\n    throw new Error('useConfig must be used within a ConfigDataProvider');\n  }\n\n  return context.config;\n};","map":{"version":3,"sources":["C:/Users/Julia/Desktop/permissioning-smart-contracts-master/permissioning-smart-contracts-master/src/context/configData.tsx"],"names":["React","createContext","useContext","ConfigDataContext","undefined","ConfigDataProvider","props","config","useConfig","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AASA,MAAMC,iBAAiB,GAAGF,aAAa,CAAcG,SAAd,CAAvC;AAEA,OAAO,MAAMC,kBAAgD,GAAGC,KAAK,IAAI;AACvE,sBAAO,oBAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAED,KAAK,CAACC;AAAhB;AAAnC,KAAiED,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFM;AAIP,OAAO,MAAME,SAAS,GAAG,MAAM;AAC7B,QAAMC,OAAO,GAAGP,UAAU,CAACC,iBAAD,CAA1B;;AAEA,MAAI,CAACM,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,SAAOD,OAAO,CAACF,MAAf;AACD,CARM","sourcesContent":["import React, { createContext, useContext } from 'react';\nimport { Config } from '../util/configLoader';\n\ntype ContextType =\n  | {\n      config: Config;\n    }\n  | undefined;\n\nconst ConfigDataContext = createContext<ContextType>(undefined);\n\nexport const ConfigDataProvider: React.FC<{ config: Config }> = props => {\n  return <ConfigDataContext.Provider value={{ config: props.config }} {...props} />;\n};\n\nexport const useConfig = () => {\n  const context = useContext(ConfigDataContext);\n\n  if (!context) {\n    throw new Error('useConfig must be used within a ConfigDataProvider');\n  }\n\n  return context.config;\n};\n"]},"metadata":{},"sourceType":"module"}