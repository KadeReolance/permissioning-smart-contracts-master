{"ast":null,"code":"import { tint, shade, readableColor } from 'polished'; // rimble base colors\n\nconst baseColors = {\n  black: '#202328',\n  white: '#FFF',\n  blue: '#36ADF1',\n  green: '#01D49A',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#CCD8E1',\n  consensysblue: '#2C56DD',\n  protocol: '#2C56DD'\n}; // rimble palette\n\nconst colors = {\n  protocol: {\n    base: baseColors.protocol,\n    text: readableColor(baseColors.protocol),\n    light: [null, tint(0.2, baseColors.protocol)],\n    dark: [null, shade(0.2, baseColors.protocol)]\n  },\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)]\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)]\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)]\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)]\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)]\n  }\n};\nconst protocol = colors.protocol;\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\nexport { protocol };\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;","map":{"version":3,"sources":["C:/Users/Julia/Desktop/permissioning-smart-contracts-master/permissioning-smart-contracts-master/src/constants/colors.ts"],"names":["tint","shade","readableColor","baseColors","black","white","blue","green","yellow","red","blurple","consensysblue","protocol","colors","base","text","light","dark"],"mappings":"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","sourcesContent":["import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#202328',\n  white: '#FFF',\n  blue: '#36ADF1',\n  green: '#01D49A',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#CCD8E1',\n  consensysblue: '#2C56DD',\n  protocol: '#2C56DD'\n};\n\n// rimble palette\nconst colors = {\n  protocol: {\n    base: baseColors.protocol,\n    text: readableColor(baseColors.protocol),\n    light: [null, tint(0.2, baseColors.protocol)],\n    dark: [null, shade(0.2, baseColors.protocol)]\n  },\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)]\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)]\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)]\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)]\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)]\n  }\n};\n\nconst protocol = colors.protocol;\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { protocol };\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\n\nexport default baseColors;\n"]},"metadata":{},"sourceType":"module"}