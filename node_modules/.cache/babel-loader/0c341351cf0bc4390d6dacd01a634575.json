{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\Desktop\\\\permissioning-smart-contracts-master\\\\permissioning-smart-contracts-master\\\\src\\\\containers\\\\Layout\\\\Initializer.tsx\";\n// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Context\n\nimport { useNetwork } from '../../context/network';\n\nconst Initializer = ({\n  children,\n  NoProvider,\n  WrongNetwork\n}) => {\n  const {\n    networkId,\n    isCorrectNetwork\n  } = useNetwork();\n\n  if (isCorrectNetwork === undefined) {\n    return /*#__PURE__*/React.createElement(NoProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    });\n  } else if (isCorrectNetwork) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    }, children);\n  } else {\n    return /*#__PURE__*/React.createElement(WrongNetwork, {\n      networkId: networkId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nInitializer.propTypes = {\n  NoProvider: PropTypes.func.isRequired,\n  WrongNetwork: PropTypes.func.isRequired\n};\nexport default Initializer;","map":{"version":3,"sources":["C:/Users/Julia/Desktop/permissioning-smart-contracts-master/permissioning-smart-contracts-master/src/containers/Layout/Initializer.tsx"],"names":["React","PropTypes","useNetwork","Initializer","children","NoProvider","WrongNetwork","networkId","isCorrectNetwork","undefined","propTypes","func","isRequired"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AAEA,MAAMC,WAAkG,GAAG,CAAC;AAC1GC,EAAAA,QAD0G;AAE1GC,EAAAA,UAF0G;AAG1GC,EAAAA;AAH0G,CAAD,KAIrG;AACJ,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAkCN,UAAU,EAAlD;;AACA,MAAIM,gBAAgB,KAAKC,SAAzB,EAAoC;AAClC,wBAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO,IAAID,gBAAJ,EAAsB;AAC3B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMJ,QAAN,CAAP;AACD,GAFM,MAEA;AACL,wBAAO,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAEG,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAbD;;AAeAJ,WAAW,CAACO,SAAZ,GAAwB;AACtBL,EAAAA,UAAU,EAAEJ,SAAS,CAACU,IAAV,CAAeC,UADL;AAEtBN,EAAAA,YAAY,EAAEL,SAAS,CAACU,IAAV,CAAeC;AAFP,CAAxB;AAKA,eAAeT,WAAf","sourcesContent":["// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Context\nimport { useNetwork } from '../../context/network';\n\nconst Initializer: React.FC<{ NoProvider: React.FC<{}>; WrongNetwork: React.FC<{ networkId: number }> }> = ({\n  children,\n  NoProvider,\n  WrongNetwork\n}) => {\n  const { networkId, isCorrectNetwork } = useNetwork();\n  if (isCorrectNetwork === undefined) {\n    return <NoProvider />;\n  } else if (isCorrectNetwork) {\n    return <div>{children}</div>;\n  } else {\n    return <WrongNetwork networkId={networkId!} />;\n  }\n};\n\nInitializer.propTypes = {\n  NoProvider: PropTypes.func.isRequired,\n  WrongNetwork: PropTypes.func.isRequired\n};\n\nexport default Initializer;\n"]},"metadata":{},"sourceType":"module"}